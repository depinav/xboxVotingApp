!function(){"use strict";angular.module("xboxGameVotingApp",["ngCookies","ngResource","ngSanitize","ngRoute","API_MODULE","ui.bootstrap"]).config(["$routeProvider",function(a){a.when("/wantedGames",{templateUrl:"templates/wantedGames/wantedGamesTemplate.html",controller:"WantedGamesCtrl"}).when("/ownedGames",{templateUrl:"templates/ownedGames/ownedGamesTemplate.html",controller:"OwnedGamesCtrl"}).when("/404",{templateUrl:"404.html"}).otherwise({redirectTo:"/wantedGames"})}])}(),angular.module("API_MODULE",["NerderyGetGamesService","NerderyAddVoteService","NerderyAddGameService","NerderySetGotItService"]),angular.module("DIRECTIVES_MODULE",[]),angular.module("NerderyConstants",[]).constant("CONSTANTS",{API_KEY:"6936aeaf8ffd9d9305f03104b9c98b00",API_URL:"http://js.november.sierrabravo.net/challenge/"}),angular.module("NerderyGetGamesService",["NerderyConstants"]).factory("GetGames",["$q","$http","CONSTANTS",function(a,b,c){return{getGames:function(){var d=a.defer();return b.jsonp(c.API_URL+"getGames?callback=JSON_CALLBACK&apiKey="+c.API_KEY).then(function(a){"object"==typeof a.data?d.resolve(a.data):d.reject(a.data)},function(a){d.reject(a.data)}),d.promise}}}]),angular.module("NerderyAddGameService",["NerderyConstants"]).factory("AddGame",["$q","$http","CONSTANTS",function(a,b,c){return{addGame:function(d){var e=a.defer();return b.jsonp(c.API_URL+"addGame?callback=JSON_CALLBACK&apiKey="+c.API_KEY+"&title="+d).then(function(a){"object"==typeof a.data?e.resolve(a.data):e.reject(a.data)},function(a){e.reject(a.data)}),e.promise}}}]),angular.module("NerderyAddVoteService",["NerderyConstants"]).factory("AddVote",["$q","$http","CONSTANTS",function(a,b,c){return{addVote:function(d){var e=a.defer();return b.jsonp(c.API_URL+"addVote?callback=JSON_CALLBACK&apiKey="+c.API_KEY+"&id="+d).then(function(a){"true"===a.data?e.resolve(a.data):e.reject(a.data)},function(a){e.reject(a.data)}),e.promise}}}]),angular.module("NerderySetGotItService",["NerderyConstants"]).factory("SetGotIt",["$q","$http","CONSTANTS",function(a,b,c){return{setGotIt:function(d){var e=a.defer();return b.jsonp(c.API_URL+"setGotIt?callback=JSON_CALLBACK&apiKey="+c.API_KEY+"&id="+d).then(function(a){"true"===a.data?e.resolve(a.data):e.reject(a.data)},function(a){e.reject(a.data)}),e.promise}}}]),angular.module("xboxGameVotingApp").controller("NavCtrl",["$scope","$modal",function(a){a.category="want",a.collapsed=!0,a.sortCategory=function(b){a.category=b},a.isActive=function(b){return a.category===b},a.collapse=function(b){a.collapsed=b}}]).controller("MainCtrl",["$scope",function(){}]),angular.module("xboxGameVotingApp").controller("OwnedGamesCtrl",["$scope","GetGames",function(a,b){a.gamesList=[],a.ownedGames=[],b.getGames().then(function(b){a.gamesList=b,angular.forEach(a.gamesList,function(b){"gotit"===b.status&&a.ownedGames.push(b)})},function(a){console.log("Error: ",a)})}]),angular.module("xboxGameVotingApp").controller("WantedGamesCtrl",["$scope","$cookieStore","GetGames","AddVote","SetGotIt",function(a,b,c){a.gamesList=[],a.wantedGames=[],a.ordered="votes",void 0!=typeof Storage?(null===localStorage.getItem("voted")||localStorage.getItem("day")!==(new Date).getDay())&&localStorage.setItem("voted",!1):console.log("Couldn't do it"),a.getGames=function(){c.getGames().then(function(b){a.gamesList=b,a.wantedGames=[],angular.forEach(a.gamesList,function(b){"wantit"===b.status&&a.wantedGames.push(b)})},function(a){console.log("Error: ",a)})},a.getGames(),a.$on("GameModelChanged",function(){a.getGames()})}]).controller("VoteForGameCtrl",["$scope","$cookieStore","AddVote",function(a,b,c){var d=new Date;a.vote=function(e){6!==d.getDay()&&0!==d.getDay()?b.get("voted")!==!0||b.get("day")!==(new Date).getDay()?(b.put("voted",!0),b.put("day",(new Date).getDay()),console.log(b.get("day")),c.addVote(e.id).then(function(){alert("Done!"),a.$emit("GameModelChanged",e)},function(){console.log("Service call failed.")})):alert("Already voted today. Try again tomorrow."):alert("Voting closed on Saturday and Sunday.")}}]).controller("SetOwnedGameCtrl",["$scope","SetGotIt",function(a,b){a.owned=function(c){b.setGotIt(c.id).then(function(){alert("Game set to owned"),a.$emit("GameModelChanged",c)},function(){console.log("Service call failed.")})}}]).controller("AddGameModalCtrl",["$scope","$modal",function(a,b){a.open=function(){var c=b.open({templateUrl:"templates/modal/addGameModalTemplate.html",controller:"AddGameModalInstanceCtrl",size:"sm",resolve:{gamesList:function(){return a.gamesList}}});c.result.then(function(b){a.$emit("GameModelChanged",b)},function(){console.log("Modal Dismissed, no service called")})}}]).controller("AddGameModalInstanceCtrl",["$scope","$modalInstance","AddGame","gamesList",function(a,b,c,d){a.game={},a.inArray=!1,a.save=function(){angular.forEach(d,function(b){b.title===a.game.title&&(a.inArray=!0)}),a.inArray?alert('Game already added to list. Check "Owned Games" page.'):c.addGame(a.game.title).then(function(b){a.game=b},function(a){console.log("Error: ",a)}),b.close(a.game)},a.cancel=function(){b.dismiss("cancel")}}]),angular.module("GamesList",["API_MODULE"]).controller("GamesListController",["$scope","$log","GetGames",function(a,b,c){a.gamesList,a.status="wantit",a.getGamesList=function(){c.getGames().then(function(b){a.gamesList=b},function(a){b.error("Service not called successfully: ",a)})},a.getGamesList(),a.$on("GameModelChanged",function(){a.getGamesList()})}]).controller("GamesListVoteController",["$scope","$log","AddVote",function(a,b,c){a.vote=function(b){c.addVote(b.id).then(function(){alert("Done!"),a.$emit("GameModelChanged",b)},function(){console.log("Service call failed.")})}}]).controller("AddGameModalCtrl",["$scope","$modal",function(a,b){a.open=function(){var c=b.open({templateUrl:"templates/modal/addGameModalTemplate.html",controller:"AddGameModalInstanceCtrl",size:"sm"});c.result.then(function(b){b.votes=1,a.$emit("GameModelChanged",b)},function(){console.log("Modal Dismissed, no service called")})}}]).controller("AddGameModalInstanceCtrl",["$scope","$modalInstance","AddGame",function(a,b,c){a.game={},a.save=function(){c.addGame(a.game.title).then(function(b){a.game=b},function(a){console.log("Error: ",a)}),b.close(a.game)},a.cancel=function(){b.dismiss("cancel")}}]);